plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
horiz=TRUE,
cex=.6) # providing point type for each
dev.off()
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(1,1,0,0))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
horiz=TRUE,
cex=.6)
?mar
?par
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,1,0,1))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
horiz=TRUE,
cex=.6)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
horiz=TRUE,
cex=.6)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
horiz=TRUE,
cex=.4)
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
#horiz=TRUE,
cex=.4)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
#horiz=TRUE,
cex=.4)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("topleft",legend=c("Democratic","Republican","Whig","Democratic-Republican"),
col=c("blue","red","yellow","green"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19),
horiz=TRUE,
cex=.5)
legend("bottomleft",legend=c("Winner", "Loser"),
col=c("black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,1),
horiz=TRUE,
cex=.5)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("topleft",legend=c("Democratic","Republican","Whig","Democratic-Republican"),
col=c("blue","red","yellow","green"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19),
horiz=TRUE,
cex=.5)
legend("bottomleft",legend=c("Winner", "Loser"),
col=c("black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,1),
horiz=TRUE,
cex=.6)
legend("center",legend=c("Democratic","Republican","Whig","Democratic-Republican","Winner", "Loser"),
col=c("blue","red","yellow","green","black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19,19,1),
horiz=TRUE,
cex=.6)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,5,0,5))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("topleft",legend=c("Democratic","Republican","Whig","Democratic-Republican"),
col=c("blue","red","yellow","green"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19),
horiz=TRUE,
cex=.5)
legend("bottomleft",legend=c("Winner", "Loser"),
col=c("black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,1),
horiz=TRUE,
cex=.6)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(0,0,0,0))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("topleft",legend=c("Democratic","Republican","Whig","Democratic-Republican"),
col=c("blue","red","yellow","green"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19),
horiz=TRUE,
cex=.6)
legend("bottomleft",legend=c("Winner", "Loser"),
col=c("black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,1),
horiz=TRUE,
cex=.6)
dev.off()
layout(matrix(c(1,2), ncol=1, byrow=FALSE), heights = c(0.85,0.15))
# setting the layout
plot(NULL,
main="The Electoral College Votes for two parties",
ylab="Vote Received by the two Parties", xlab="Election Year",
ylim=c(min(PresElection[, c(14, 15)]), max(PresElection[, c(14, 15)])),
xlim = c(min(PresElection[,2]), max(PresElection[,2])))
# Difine the colors of the points
PartyColors <- as.character(PresElection$Party)
PartyColors[PartyColors == 'Dem.'] <- 'blue'
PartyColors[PartyColors == 'Rep.'] <- 'red'
PartyColors[PartyColors == 'Whig'] <- 'yellow'
PartyColors[PartyColors == 'D.-R.'] <- 'green'
points(x=PresElection$year,
y=PresElection$Win_EC,
pch=19, col=PartyColors)
points(x=PresElection$year,
y=PresElection$Lose_EC,
pch=1, col=PartyColors)
segments(x0=PresElection$year,
y0=PresElection$Win_EC,
y1=PresElection$Lose_EC,
lty=4, col="black")
par(mar=c(1,0,0,0))
plot(0,0, type="n", axes=FALSE, xlab="", ylab="")
legend("topleft",legend=c("Democratic","Republican","Whig","Democratic-Republican"),
col=c("blue","red","yellow","green"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,19,19,19),
horiz=TRUE,
cex=.6)
legend("bottomleft",legend=c("Winner", "Loser"),
col=c("black","black"),
# providing color for each item in legend
# providing line type for each item in legend
pch=c(19,1),
horiz=TRUE,
cex=.6)
dev.off()
plot(NULL, main = "Electoral Vote vs Popular Vote\n Percentages",
ylim = c(min(PresElection[,c(6,7)]), max(PresElection[,c(6,7)])+2),
xlim = c(min(PresElection[,2]), max(PresElection[,2])),
ylab = "Vote Received by Winning Parties",
xlab = "Election Year")
lines(x=sort(PresElection$year), y=PresElection$`Electoral College Percentage`, lty=1)
lines(x=sort(PresElection$year), y=PresElection$`Popular Vote Percentage`, lty=4)
legend("topleft",
legend=c("Electoral College", "Popular Vote"),
lty = c(1,4),
cex = .9)
plot(NULL, main = "Electoral Vote vs Popular Vote in Percentages",
ylim = c(min(PresElection[,c(6,7)]), max(PresElection[,c(6,7)])+2),
xlim = c(min(PresElection[,2]), max(PresElection[,2])),
ylab = "Vote Received by Winning Parties",
xlab = "Election Year")
lines(x=sort(PresElection$year), y=PresElection$`Electoral College Percentage`, lty=1)
lines(x=sort(PresElection$year), y=PresElection$`Popular Vote Percentage`, lty=4)
legend("topleft",
legend=c("Electoral College", "Popular Vote"),
lty = c(1,4),
cex = .9)
wikiURL2 <- 'https://en.wikipedia.org/wiki/United_States_presidential_election'
PresElection2 <- html_table(wikiURL2)[[3]]
PresElection2 <- htmltab(wikiURL, which = 3)
library(htmltab)
wikiURL2 <- 'https://en.wikipedia.org/wiki/United_States_presidential_election'
PresElection2 <- htmltab(wikiURL2, which = 3)
View(PresElection2)
View(PresElection)
PresElection2[,8] <- as.numeric(sub(".*\\/", "",PresElection2[,7])-
as.numeric(sub("*\\/.*", "",PresElection2[,7])
)
)
PresElection2[,8] <- as.numeric(sub(".*\\/", "",PresElection2[,7]))-
as.numeric(sub("*\\/.*", "",PresElection2[,7]))
PresElection2[,9] <- as.numeric(sub("*\\/.*", "",PresElection2[,7]))
Tobeused <- data.frame() # creating an empty data frame
Tobeused <- data.frame()
for(i in unique(PresElection2$Year)){
year_df <- PresElection2[PresElection2==i,] #isolating the rows for year i
Tobeused <- NULL # creating an empty object for the vote totals for each
# candidate
for(j in unique(year_df$`Presidential candidate`)){ # initializing a loop to iterate
# over each presidential candidate in year i
candidate_votes <- sum(as.numeric(year_df$`Electoral votes`[which(year_df$`Presidential candidate`==j)]))
# summing the votes received by candidate j, if multiple rows exist for the candidate
candidate_vote_totals <- as.data.frame(rbind(candidate_vote_totals, cbind(j, candidate_votes)), stringsAsFactors=FALSE)
# binding the extant data frame for all years i, and this year i, and then converting
# object back to a data frame
}
}
for(i in unique(PresElection2$Year)){
year_df <- PresElection2[PresElection2==i,] #isolating the rows for year i
candidate_vote_totals <- NULL # creating an empty object for the vote totals for each
# candidate
for(j in unique(year_df$`Presidential candidate`)){ # initializing a loop to iterate
# over each presidential candidate in year i
candidate_votes <- sum(as.numeric(year_df$`Electoral votes`[which(year_df$`Presidential candidate`==j)]))
# summing the votes received by candidate j, if multiple rows exist for the candidate
candidate_vote_totals <- as.data.frame(rbind(candidate_vote_totals, cbind(j, candidate_votes)), stringsAsFactors=FALSE)
# binding the extant data frame for all years i, and this year i, and then converting
# object back to a data frame
}
}
warnings()
candidate_vote_totals <- data.frame()
for(i in unique(PresElection2$Year)){
year_df <- PresElection2[PresElection2==i,] #isolating the rows for year i
candidate_vote_totals <- NULL # creating an empty object for the vote totals for each
# candidate
for(j in unique(year_df$`Presidential candidate`)){ # initializing a loop to iterate
# over each presidential candidate in year i
candidate_votes <- sum(as.numeric(year_df$`Electoral votes`[which(year_df$`Presidential candidate`==j)]))
# summing the votes received by candidate j, if multiple rows exist for the candidate
candidate_vote_totals <- as.data.frame(rbind(candidate_vote_totals, cbind(j, candidate_votes)), stringsAsFactors=FALSE)
# binding the extant data frame for all years i, and this year i, and then converting
# object back to a data frame
}
}
Clean_data <- aggregate(as.numeric(PresElection2[, 7]) ~ PresElection2[, 1] + PresElection2[, 3], FUN = sum)
library(htmltab)
wikiURL2 <- 'https://en.wikipedia.org/wiki/United_States_presidential_election'
PresElection2 <- htmltab(wikiURL2, which = 3)
PresElection2[, 7] <- gsub( " .*$", "", PresElection2[, 7])
#PresElection2[106, 7] <- '42'
PresElection2 <- aggregate(as.numeric(PresElection2[, 7]) ~ PresElection2[, 1] + PresElection2[, 3], FUN = sum)
colnames(PresElection2) <- c('Year', 'Candidate', 'Votes')
cleanname <- function(x){
x <- gsub(".*,", "", x)
x <- gsub("[A-Z]. ", "", x)
}
PresElection2[, 2] <- apply(PresElection2[, 2], 2, cleanname)
PresElection2[, 2] <- apply(PresElection2[, 2], 1, cleanname)
PresElection2[, 2] <- apply(PresElection2[, 2],2, cleanname)
PresElection2[, 2] <- cleanname(PresElection2[, 2])
